#!/usr/bin/env zsh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 022320212352-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Tuesday, Feb 23, 2021 23:52 EST
# @File          : zshrc
# @Description   : zsh profile script
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# allow insecure directories and files
ZSH_DISABLE_COMPFIX="true"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Enable completion (this needs to be done before sourcing plugins)
autoload -Uz compinit
compinit
autoload -U bashcompinit
bashcompinit
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ensure exports is loaded
if [ -f "$HOME/.config/zsh/profile/00-exports.zsh" ]; then
  source "$HOME/.config/zsh/profile/00-exports.zsh"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# include .profile if it exists
if [ -f "$HOME/.profile" ]; then
  source "$HOME/.profile"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set path
path=("$HOME/.local/bin" $path)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# enable brew.sh completions
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Add user functions to $fpath
fpath=("$HOME/.config/zsh/functions" $fpath)
for function in "$HOME/.config/zsh/functions"/*.zsh; do
  source "$function" 2>/dev/null
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load all files from .config/zsh/profile directory
if [[ -d "$HOME/.config/zsh/profile" ]]; then
  for profile in "$HOME/.config/zsh/profile"/*.zsh; do
    source "$profile" 2>/dev/null
  done
  unset profile
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load all files from .config/zsh/completions directory
if [[ -d "$HOME/.config/zsh/completions" ]]; then
  for completions in "$HOME/.config/zsh/completions"/*.zsh; do
    source "$completions" 2>/dev/null
  done
  unset completions
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# $fpath should not be empty for this to work.
for func in $^fpath/*(N-.x:t); do
  autoload -U $func
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Enable edit-command-line
autoload -U edit-command-line
zle -N edit-command-line
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Enable menu completion
zstyle ':completion:*' menu select
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# zsh-autosuggestions
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_USE_ASYNC=1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set title - function set
DISABLE_AUTO_TITLE="true"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Accept the current autosuggestion
#bindkey "^ " autosuggest-accept
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Perform history expansion and insert a space
bindkey " " magic-space
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Add the current line to the stack and start a new command line
bindkey "^Q" push-line
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Make cd push the old directory onto the directory stack
setopt AUTO_PUSHD
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Do not print the directory stack after pushd or popd
setopt PUSHD_SILENT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Have pushd with no arguments act like `pushd $HOME'
setopt PUSHD_TO_HOME
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Don't push multiple copies of the same directory onto the directory stack
setopt PUSHD_IGNORE_DUPS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Allow for extended glob patterns
setopt EXTENDED_GLOB
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Disable flow control
setopt NO_FLOW_CONTROL
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Try to correct the spelling of commands
setopt CORRECT
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
setopt SHARE_HISTORY
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Split words on slashes (useful for paths)
WORDCHARS=${WORDCHARS/\//}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Remove duplicates in path variables
typeset -gU path fpath cdpath manpath
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source plugins
if [[ -f "$HOME/.config/zsh/plugins.zsh" ]]; then
  source "$HOME/.config/zsh/plugins.zsh" 2>/dev/null
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source users file
if [[ -f "$HOME/.config/local/zsh.local" ]]; then
  source "$HOME/.config/local/zsh.local" 2>/dev/null
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source users file server
if [[ -f "$HOME/.config/local/zsh.servers.local" ]]; then
  source "$HOME/.config/local/zsh.server.local" 2>/dev/null
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Source system specific
if [[ -f "$HOME/.config/local/zsh.$(hostname).local" ]]; then
  source "$HOME/.config/local/zsh.$(hostname).local" 2>/dev/null
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
export ZSHRCSRC="$HOME/.zshrc"
